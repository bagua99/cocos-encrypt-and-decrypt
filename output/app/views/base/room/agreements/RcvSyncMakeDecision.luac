--region app.views.base.room.agreements.RcvSyncMakeDecision
--desc: 广播决策结果
--endregion

local RcvSyncMakeDecision = class("RcvSyncMakeDecision", BaseRoomAgreement)

-- 广播决策结果
function RcvSyncMakeDecision:ctor()
	self:registerMsgListener(gt.GC_SYNC_MAKE_DECISION, self, self.onRcvSyncMakeDecision)
end

function RcvSyncMakeDecision:onRcvSyncMakeDecision(msgTbl)
	if msgTbl.m_errorCode ~= 0 then
		return
	end

	local room = self.m_scene:getRoom()
	-- 隐藏决策按键
	local decisionBtnNode = self.m_scene:getDecisionNode()
	if decisionBtnNode:isVisible() then
		local isCanHuFlag = false
		for _, decisionBtn in ipairs(decisionBtnNode:getChildren()) do
			if  decisionBtn:getName() == "Btn_decision_1" then
				if decisionBtn:isVisible() == true then
					isCanHuFlag = true
					break
				end

			end
		end

		if isCanHuFlag then -- 有胡
			for _, decisionBtn in ipairs(decisionBtnNode:getChildren()) do
				 if decisionBtn:getName() == "Btn_decision_0" or decisionBtn:getName() == "Btn_decision_1" then
					decisionBtn:setVisible(true)
				else
					decisionBtn:setVisible(false)
				end
			end
		end

		if not isCanHuFlag then
			self.m_scene:setPlayerDecision(false)
			decisionBtnNode:removeAllChildren()
		end
	end
	if msgTbl.m_think ~= 0 then -- 吃,碰,杠,胡
		self.m_scene:addPreOutMjTiles();
	end

	local seatIdx = msgTbl.m_pos + 1
	if msgTbl.m_think[1] == 2 then
		-- 接炮胡
		self.m_scene:showAllMjTilesWhenWin(seatIdx, msgTbl.m_cardCount, msgTbl.m_cardValue, msgTbl.m_color, msgTbl.m_number)
		self.m_scene:showDecisionAnimation(seatIdx, Room.DecisionType.TAKE_CANNON_WIN, msgTbl.m_hu)
	elseif msgTbl.m_think[1] == 3 or  msgTbl.m_think[1] == 4 then
		-- 明杠
		self.m_scene:addMjTileBar(seatIdx, msgTbl.m_color, msgTbl.m_number, true)
		-- 杠牌动画
		self.m_scene:showDecisionAnimation(seatIdx, Room.DecisionType.BRIGHT_BAR)

		-- 隐藏持有牌中打出的牌
		self.m_scene:hideOtherPlayerMjTiles(seatIdx, true, true)
		-- 移除上家打出的牌
		self.m_scene:removePreRoomPlayerOutMjTile()
	elseif msgTbl.m_think[1] == 5 then
		-- 碰牌
		self.m_scene:addMjTilePung(seatIdx, msgTbl.m_color, msgTbl.m_number)
		-- 碰牌动画
		self.m_scene:showDecisionAnimation(seatIdx, Room.DecisionType.PUNG)
		-- 隐藏持有牌中打出的牌
		self.m_scene:hideOtherPlayerMjTiles(seatIdx, false)
		-- 移除上家打出的牌
		self.m_scene:removePreRoomPlayerOutMjTile()

		--重新设置自己的牌显示一张需要打出
		self.m_scene:setPosAfterPeng(seatIdx)
	elseif msgTbl.m_think[1] == 6 then
		local eatGroup = {}
		table.insert(eatGroup,{msgTbl.m_think[2][1][2], 0, msgTbl.m_color})
		table.insert(eatGroup,{msgTbl.m_number, 1, msgTbl.m_color})
		table.insert(eatGroup,{msgTbl.m_think[2][2][2], 0, msgTbl.m_color})
		--table.sort(eatGroup, function(a, b)
			--return a[1] < b[1]
		--end)

		-- 吃牌
		
		local roomPlayer = room:getPlayer(seatIdx)
		table.insert(roomPlayer:getEatMJTiles(), eatGroup)

		self.m_scene:pungBarReorderMjTiles(seatIdx, msgTbl.m_color, eatGroup)
		-- 碰牌动画
		self.m_scene:showDecisionAnimation(seatIdx, Room.DecisionType.EAT)

		-- 隐藏持有牌中打出的牌
		self.m_scene:hideOtherPlayerMjTiles(seatIdx, false)
		-- 移除上家打出的牌
		self.m_scene:removePreRoomPlayerOutMjTile()
	elseif msgTbl.m_think[1] == 7 or msgTbl.m_think[1] == 8 then

		self.m_scene:addMjTileBu(seatIdx, msgTbl.m_color, msgTbl.m_number, true)
		-- 杠牌动画
		self.m_scene:showDecisionAnimation(seatIdx, Room.DecisionType.BRIGHT_BU)

		-- 隐藏持有牌中打出的牌
		self.m_scene:hideOtherPlayerMjTiles(seatIdx, true, true)
		-- 移除上家打出的牌
		self.m_scene:removePreRoomPlayerOutMjTile()
	end
end

return RcvSyncMakeDecision